package com.dandan.crm.workbench.mapper;

import com.dandan.crm.workbench.domain.ClueActivityRelation;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Dec 06 11:58:39 CST 2021
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Dec 06 11:58:39 CST 2021
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Dec 06 11:58:39 CST 2021
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Dec 06 11:58:39 CST 2021
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Dec 06 11:58:39 CST 2021
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon Dec 06 11:58:39 CST 2021
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 批量保存市场活动和线索关联信息
     * @param clueActivityRelationList
     * @return
     */
    int insertClueActivityRelationByList(List<ClueActivityRelation> clueActivityRelationList);

    /**
     * 根据市场活动id和线索id删除关联记录
     * @param relation
     * @return
     */
    int deleteClueActivityRelationByClueIdActivityId(ClueActivityRelation relation);

    List<ClueActivityRelation> selectAllRelationByClueId(String clueId);

    int deleteClueActivityRelationByClueId(String clueId);
}